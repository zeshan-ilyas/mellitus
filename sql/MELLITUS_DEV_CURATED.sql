
select *
from MELLITUS_DEV_STAGING.INBOUND.DIABETES_DATA_CLEANED
limit 100


select *
from MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM
limit 100



--Create a new table named PATIENT_DIM Table

CREATE TABLE PATIENT_DIM (
    PATIENT_ID INT AUTOINCREMENT (1,1) PRIMARY KEY,           -- Auto-incrementing primary key
    GENDER VARCHAR(10),                                       -- Gender column
    AGE    NUMBER(38,0),                                      -- Patient's age
    AGE_GROUP VARCHAR(20),                                    -- Age group (e.g., 0-10, 11-20)
    STAR_SIGN VARCHAR(20)                                     -- Zodiac sign based on birthdate
    );                               
  
--Populate the data into Patient_Dim table
INSERT INTO MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM (GENDER, AGE, AGE_GROUP, STAR_SIGN)
SELECT GENDER, AGE, AGE_GROUP, STAR_SIGN
FROM MELLITUS_DEV_STAGING.INBOUND.DIABETES_DATA_CLEANED;
 

DROP VIEW MELLITUS_DEV_STAGING.INBOUND.LIFESTYLE_AND_PREDICTED_DIABETES;


 
-- Create a new table named HEALTH_METRICS_DIM Table

CREATE  TABLE HEALTH_METRICS_DIM (
    METRIC_ID INT AUTOINCREMENT (1,1) PRIMARY KEY,              -- Auto-increment starting at 1 and incrementing BY 1
    PATIENT_ID INT,                                             -- Foreign key column referencing the PATIENT_ID in PATIENT_DIM
    BMI NUMBER(38,1),                                           -- Body Mass Index with precision up to one decimal place  
    WEIGHT NUMBER(38,1),                                        -- Weight with precision up to one decimal place
    HEIGHT NUMBER(38,2),                                         -- Height with precision up to one decimal place
    HYPERTENSION NUMBER(38,0),                                  -- Binary flag for hypertension
    DIABETES_PEDIGREE_FUNCTION NUMBER(38,2),                    -- Pedigree function value, allowing up to 2 decimal places
    FAMILY_DIABETES_HISTORY NUMBER(38,0),                       -- Binary flag for family diabetes history
    FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT_DIM(PATIENT_ID) -- Link to the PATIENT_DIM table
    ); 


  
--Populate the data into HEALTH_METRICS_DIM Table
INSERT INTO MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM (PATIENT_ID, BMI, WEIGHT,HEIGHT,HYPERTENSION, DIABETES_PEDIGREE_FUNCTION, FAMILY_DIABETES_HISTORY)
SELECT p.PATIENT_ID, c.BMI, c.WEIGHT, c.HEIGHT, c.HYPERTENSION, c.DIABETES_PEDIGREE_FUNCTION, c.FAMILY_DIABETES_HISTORY

FROM MELLITUS_DEV_STAGING.INBOUND.DIABETES_DATA_CLEANED c
JOIN MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
ON  c.ROW_ID = p.PATIENT_ID 

 -- Create Pregnancies Column in Health_Metrics_Dim Table

ALTER TABLE MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM
ADD COLUMN PREGNANCIES NUMBER(38, 0);

  -- Update Health_Metrics_Dim Table
  
MERGE INTO MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m
USING MELLITUS_DEV_STAGING.INBOUND.DIABETES_DATA_CLEANED c
ON m.PATIENT_ID = c.ROW_ID
WHEN MATCHED THEN
    UPDATE SET m.PREGNANCIES = c.PREGNANCIES;



--Create a new table named LIFESTYLE_DIM Table
CREATE  TABLE LIFESTYLE_DIM (
    LIFESTYLE_ID INT AUTOINCREMENT (1,1) PRIMARY KEY,
    PATIENT_ID INT,
    DIET_TYPE VARCHAR(255),
    PHYSICAL_ACTIVITY_LEVEL VARCHAR(255),
    SOCIAL_MEDIA_USAGE VARCHAR(255),
    SLEEP_DURATION NUMBER(10,1),
    STRESS_LEVEL VARCHAR(255),
    ALCOHOL_CONSUMPTION VARCHAR(255),
    FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT_DIM(PATIENT_ID)
    );



--Populate the data into LIFESTYLE_DIM Table
INSERT INTO MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM (PATIENT_ID, DIET_TYPE, PHYSICAL_ACTIVITY_LEVEL, SOCIAL_MEDIA_USAGE, SLEEP_DURATION, STRESS_LEVEL, ALCOHOL_CONSUMPTION)
SELECT p.PATIENT_ID, c.DIET_TYPE, c.PHYSICAL_ACTIVITY_LEVEL, c.SOCIAL_MEDIA_USAGE, c.SLEEP_DURATION, c.STRESS_LEVEL, c.ALCOHOL_CONSUMPTION

FROM MELLITUS_DEV_STAGING.INBOUND.DIABETES_DATA_CLEANED c
JOIN MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
ON  c.ROW_ID = p.PATIENT_ID 



--Create a new table named DIABETES_FACT Table
CREATE TABLE DIABETES_FACT (
    FACT_ID INT AUTOINCREMENT (1,1) PRIMARY KEY,
    PATIENT_ID INT,
    METRIC_ID INT,
    LIFESTYLE_ID INT,
    DIABETES NUMBER(38,0),
    PREDICTED_DIABETES_FLAG BOOLEAN,
    RISK_SCORE NUMBER(38,2),
    CREATED_DTTM TIMESTAMP_NTZ(9),
    MODIFIED_DTTM TIMESTAMP_NTZ(9),
    FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT_DIM(PATIENT_ID),
    FOREIGN KEY (METRIC_ID) REFERENCES HEALTH_METRICS_DIM(METRIC_ID),
    FOREIGN KEY (LIFESTYLE_ID) REFERENCES LIFESTYLE_DIM(LIFESTYLE_ID)
);


--Populate the data into DIABETES_FACT Table
    
INSERT INTO MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT (PATIENT_ID, METRIC_ID, LIFESTYLE_ID, DIABETES, PREDICTED_DIABETES_FLAG, CREATED_DTTM, MODIFIED_DTTM)
SELECT
    p.PATIENT_ID,
    m.METRIC_ID,
    l.LIFESTYLE_ID,
    c.DIABETES,
    c.PREDICTED_DIABETES_FLAG,
    c.CREATED_DTTM,
    c.MODIFIED_DTTM

FROM MELLITUS_DEV_STAGING.INBOUND.DIABETES_DATA_CLEANED c
JOIN MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
ON  c.ROW_ID = p.PATIENT_ID 

JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m
ON   p.PATIENT_ID = m.PATIENT_ID AND c.BMI = m.BMI AND c.WEIGHT = m.WEIGHT

JOIN  MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM l
ON    p.PATIENT_ID = l.PATIENT_ID AND c.DIET_TYPE = l.DIET_TYPE AND c.PHYSICAL_ACTIVITY_LEVEL = l.PHYSICAL_ACTIVITY_LEVEL;;


----CREATING VIEWS

--AVG AGE
CREATE OR REPLACE VIEW AVG_AGE_VIEW AS
SELECT 
    AVG(AGE) AS AVG_AGE
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM ;
 

SELECT * FROM AVG_AGE_VIEW;
 
--AVG BMI
CREATE OR REPLACE VIEW AVG_BMI_VIEW AS
SELECT 
    AVG(BMI) AS AVG_BMI
 FROM MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM ;

--GENDER VIEW
CREATE OR REPLACE VIEW GENDER_DISTRIBUTION_VIEW AS
SELECT 
    GENDER,
    COUNT(*) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM
GROUP BY GENDER;


--VALIDATE
SELECT * FROM GENDER_DISTRIBUTION_VIEW;

--Hypertension Percentage
CREATE OR REPLACE VIEW HYPERTENSION_PERCENTAGE_VIEW AS
SELECT 
    ROUND((SUM(CASE WHEN HYPERTENSION = 1 THEN 1 ELSE 0 END) * 100.0) / COUNT(*), 2) AS PERCENT_HYPERTENSION
FROM MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM;


-- DIABETES PERCENTAGE VIEW
CREATE OR REPLACE VIEW DIABETES_PERCENTAGE_VIEW AS
SELECT 
    ROUND((SUM(CASE WHEN DIABETES = 1 THEN 1 ELSE 0 END) * 100.0) / COUNT(*), 2) AS PERCENT_DIABETES
FROM MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT;


--DIABETES HISTORY
CREATE OR REPLACE VIEW FAMILY_DIABETES_HISTORY_VIEW AS
SELECT 
    FAMILY_DIABETES_HISTORY,
    COUNT(*) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM
GROUP BY FAMILY_DIABETES_HISTORY;

--DIET TYPE COUNT
CREATE OR REPLACE VIEW DIET_TYPE_COUNT_VIEW AS
SELECT 
    DIET_TYPE,
    COUNT(*) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM
GROUP BY DIET_TYPE;

--PHYSICAL ACTIVITY VIEW
CREATE OR REPLACE VIEW PHYSICAL_ACTIVITY_COUNT_VIEW AS
SELECT 
    PHYSICAL_ACTIVITY_LEVEL,
    COUNT(*) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM
GROUP BY PHYSICAL_ACTIVITY_LEVEL;

--AVG SLEEP DURATION VIEW
CREATE OR REPLACE VIEW AVG_SLEEP_DURATION_VIEW AS
SELECT 
    AVG(SLEEP_DURATION) AS AVG_SLEEP_DURATION
FROM MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM;
 

--STRESS LEVEL 
CREATE OR REPLACE VIEW STRESS_LEVEL_COUNT_VIEW AS
SELECT 
    STRESS_LEVEL,
    COUNT(*) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM
GROUP BY STRESS_LEVEL;

--ALCOHOL CONSUMPTION VIEW
CREATE OR REPLACE VIEW ALCOHOL_CONSUMPTION_COUNT_VIEW AS
SELECT 
    ALCOHOL_CONSUMPTION,
    COUNT(*) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM
GROUP BY ALCOHOL_CONSUMPTION;



--View for Patients with Hypertension and Diabetes
CREATE OR REPLACE VIEW HYDRATED_DIABETES_PATIENTS AS
SELECT DISTINCT 
    p.PATIENT_ID,
    p.GENDER,
    p.AGE,
    m.HYPERTENSION,
    d.DIABETES,
    m.DIABETES_PEDIGREE_FUNCTION,
    m.FAMILY_DIABETES_HISTORY,
    m.BMI,
    m.WEIGHT,
    p.AGE_GROUP
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m 
    ON p.PATIENT_ID = m.PATIENT_ID
JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
    ON p.PATIENT_ID = d.PATIENT_ID
WHERE m.HYPERTENSION = 1 
  AND d.DIABETES = 1;

  --VALIDATE VIEW
  SELECT * FROM HYDRATED_DIABETES_PATIENTS;



-- View for Patients by Age Group and Star Sign
CREATE OR REPLACE VIEW PATIENTS_BY_AGE_AND_STAR_SIGN AS
SELECT DISTINCT
    p.AGE_GROUP,
    p.STAR_SIGN,
    
    COUNT(p.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
GROUP BY p.AGE_GROUP, p.STAR_SIGN
ORDER BY PATIENT_COUNT DESC;



--View for BMI and weight distribution

CREATE OR REPLACE VIEW BMI_AND_WEIGHT_DISTRIBUTION AS
SELECT DISTINCT
    p.PATIENT_ID,
    m.BMI,
    m.WEIGHT,
    CASE 
        WHEN m.BMI < 18.5 THEN 'Underweight'
        WHEN m.BMI BETWEEN 18.5 AND 24.9 THEN 'Normal weight'
        WHEN m.BMI BETWEEN 25 AND 29.9 THEN 'Overweight'
        ELSE 'Obesity'
    END AS BMI_CATEGORY
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m 
    ON p.PATIENT_ID = m.PATIENT_ID;



--Family History and Diabetes Risk

CREATE OR REPLACE VIEW FAMILY_HISTORY_AND_DIABETES_RISK AS
SELECT 
    p.PATIENT_ID,
    m.FAMILY_DIABETES_HISTORY,
    d.DIABETES,
    COUNT(p.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
    ON p.PATIENT_ID = d.PATIENT_ID
    
JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m 
    ON p.PATIENT_ID = m.PATIENT_ID
    
WHERE m.FAMILY_DIABETES_HISTORY = 1
GROUP BY p.PATIENT_ID, m.FAMILY_DIABETES_HISTORY, d.DIABETES
ORDER BY PATIENT_COUNT DESC;


--View for Predicted Diabetes by Age Group and Gender

CREATE OR REPLACE VIEW PREDICTED_DIABETES_BY_AGE_GENDER AS
SELECT DISTINCT
    p.AGE_GROUP,
    p.GENDER,
    d.PREDICTED_DIABETES_FLAG,
    COUNT(p.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p

JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
    ON p.PATIENT_ID = d.PATIENT_ID
    
GROUP BY p.AGE_GROUP, p.GENDER, d.PREDICTED_DIABETES_FLAG
ORDER BY p.AGE_GROUP, d.PREDICTED_DIABETES_FLAG DESC;



--View for Diabetes and Sleep Duration

CREATE OR REPLACE VIEW DIABETES_AND_SLEEP_DURATION AS
SELECT 
    p.PATIENT_ID,
    l.SLEEP_DURATION,
    CASE 
        WHEN l.SLEEP_DURATION < 6 THEN 'Low Sleep'
        WHEN l.SLEEP_DURATION BETWEEN 6 AND 8 THEN 'Moderate Sleep'
        ELSE 'High Sleep'
    END AS SLEEP_CATEGORY,
    d.DIABETES,
    COUNT(p.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
JOIN MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM l
    ON p.PATIENT_ID = l.PATIENT_ID
JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
    ON p.PATIENT_ID = d.PATIENT_ID
GROUP BY p.PATIENT_ID, l.SLEEP_DURATION, d.DIABETES
ORDER BY SLEEP_CATEGORY, PATIENT_COUNT DESC;



---View to analyze the relationship between BMI and Diabetes

CREATE OR REPLACE VIEW BMI_AND_DIABETES_CORRELATION AS
SELECT 
    m.BMI,
    CASE 
        WHEN m.BMI < 18.5 THEN 'Underweight'
        WHEN m.BMI BETWEEN 18.5 AND 24.9 THEN 'Normal weight'
        WHEN m.BMI BETWEEN 25 AND 29.9 THEN 'Overweight'
        ELSE 'Obesity'
    END AS BMI_CATEGORY,
    d.DIABETES,
    COUNT(d.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m
    ON d.METRIC_ID = m.METRIC_ID
GROUP BY m.BMI, d.DIABETES
ORDER BY 2, PATIENT_COUNT DESC;



-- Drop Risk Column in diabetes_fact table

ALTER TABLE MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT
DROP COLUMN RISK_SCORE;


---View to analyze the relationship between Hypertension and Diabetes
CREATE OR REPLACE VIEW DIABETES_AND_HYPERTENSION_CORRELATION AS
SELECT 
    p.GENDER,
    p.AGE_GROUP,
    m.HYPERTENSION,
    d.DIABETES,
    COUNT(p.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m
    ON p.PATIENT_ID = m.PATIENT_ID
JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
    ON d.PATIENT_ID = m.PATIENT_ID
WHERE d.DIABETES = 1
GROUP BY p.GENDER, p.AGE_GROUP, m.HYPERTENSION, d.DIABETES
ORDER BY PATIENT_COUNT DESC;


-- View for DIABETES RISK FACTORS AND lIFESTYLE

CREATE OR REPLACE VIEW DIABETES_RISK_FACTORS_AND_LIFESTYLE AS
SELECT DISTINCT
    l.PATIENT_ID,
    l.DIET_TYPE,
    l.PHYSICAL_ACTIVITY_LEVEL,
    l.SLEEP_DURATION,
    l.STRESS_LEVEL,
    d.DIABETES,
    CASE
        WHEN l.STRESS_LEVEL = 'High' THEN 1
        ELSE 0
    END AS HIGH_STRESS_FLAG,
    CASE
        WHEN l.SLEEP_DURATION < 6 THEN 'Low Sleep'
        WHEN l.SLEEP_DURATION BETWEEN 6 AND 8 THEN 'Moderate Sleep'
        ELSE 'High Sleep'
    END AS SLEEP_CATEGORY
FROM MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM l
JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
    ON l.PATIENT_ID = d.PATIENT_ID
WHERE d.DIABETES = 1;

-- Diabetes Prevalence by Demographic Factors

CREATE OR REPLACE VIEW DIABETES_BY_DEMOGRAPHICS AS
SELECT DISTINCT
    p.GENDER,
    p.AGE_GROUP,
    m.FAMILY_DIABETES_HISTORY,
    COUNT(p.PATIENT_ID) AS DIABETES_COUNT,
    AVG(d.DIABETES) AS DIABETES_PREVALENCE
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
ON p.PATIENT_ID = d.PATIENT_ID

JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m
ON p.PATIENT_ID = m.PATIENT_ID
    
GROUP BY p.GENDER, p.AGE_GROUP, m.FAMILY_DIABETES_HISTORY
ORDER BY DIABETES_PREVALENCE DESC;

--View for Lifestyle and Predicted Diabetes

CREATE OR REPLACE VIEW LIFESTYLE_AND_PREDICTED_DIABETES AS
SELECT 
    l.DIET_TYPE,
    l.PHYSICAL_ACTIVITY_LEVEL,
    d.PREDICTED_DIABETES_FLAG,
    COUNT(d.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
JOIN MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM l
    ON d.PATIENT_ID = l.PATIENT_ID
GROUP BY l.DIET_TYPE, l.PHYSICAL_ACTIVITY_LEVEL, d.PREDICTED_DIABETES_FLAG;


-- View for Alcohol Consumption and Family History of Diabetes

CREATE OR REPLACE VIEW ALCOHOL_AND_FAMILY_HISTORY AS
SELECT 
    p.PATIENT_ID,
    l.ALCOHOL_CONSUMPTION,
    m.FAMILY_DIABETES_HISTORY,
    d.DIABETES,
    p.AGE,
    p.AGE_GROUP
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
JOIN MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM l
    ON p.PATIENT_ID = l.PATIENT_ID
JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m
    ON p.PATIENT_ID = m.PATIENT_ID
JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
    ON p.PATIENT_ID = d.PATIENT_ID
WHERE l.ALCOHOL_CONSUMPTION = 'High' 
  AND m.FAMILY_DIABETES_HISTORY = 1;

--View for Health conditions and Stress

CREATE OR REPLACE VIEW HEALTH_CONDITIONS_AND_STRESS AS
SELECT 
    p.PATIENT_ID,
    m.HYPERTENSION,
    d.DIABETES,
    l.STRESS_LEVEL,
    COUNT(p.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p
JOIN MELLITUS_DEV_CURATED.PUBLIC.LIFESTYLE_DIM l
    ON p.PATIENT_ID = l.PATIENT_ID
JOIN MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM m
    ON p.PATIENT_ID = m.PATIENT_ID
JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
    ON p.PATIENT_ID = d.PATIENT_ID
GROUP BY m.HYPERTENSION, d.DIABETES, l.STRESS_LEVEL, p.PATIENT_ID
ORDER BY m.HYPERTENSION DESC, d.DIABETES DESC, l.STRESS_LEVEL DESC;


--Predicted Diabetes by Agegroup

CREATE OR REPLACE VIEW PREDICTED_DIABETES_BY_AGE AS
SELECT DISTINCT
    p.AGE_GROUP,
    d.PREDICTED_DIABETES_FLAG,
    COUNT(p.PATIENT_ID) AS PATIENT_COUNT
FROM MELLITUS_DEV_CURATED.PUBLIC.PATIENT_DIM p

JOIN MELLITUS_DEV_CURATED.PUBLIC.DIABETES_FACT d
ON p.PATIENT_ID = d.PATIENT_ID
    
GROUP BY p.AGE_GROUP, d.PREDICTED_DIABETES_FLAG
ORDER BY p.AGE_GROUP, d.PREDICTED_DIABETES_FLAG DESC;



SELECT PATIENT_ID, PREGNANCIES
FROM MELLITUS_DEV_CURATED.PUBLIC.HEALTH_METRICS_DIM
WHERE PREGNANCIES IS NOT NULL
ORDER BY PATIENT_ID;
